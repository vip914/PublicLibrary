@model PagedList.IPagedList<PublicLibrary.Domain.Book>
@using PagedList.Mvc;

<link href="~/Content/PagedList.css" rel="stylesheet" type="text/css" />

@{
    ViewBag.Title = "Books";
}

<h2>Books</h2>

<p>
    @Html.ActionLink("Create New", "Create")
</p>

@using (Html.BeginForm())
{
    <div class="form-group">
        Find by name:
        <div style="display: inline-block">
            @Html.TextBox("SearchString", ViewBag.CurrentFilter as string, new { @class = "form-control" })           
        </div>
        <input type="submit" value="Search" class="btn btn-default" />
    </div>
}

<table class="table">
    <tr>
        <th>
            @Html.ActionLink("Name", "Index", new { sortOrder = ViewBag.NameSortParm, currentFilter = ViewBag.CurrentFilter })
        </th>
        <th>
            @Html.ActionLink("Book availability", "Index", new { sortOrder = ViewBag.BookAvailabilitySortParm, currentFilter = ViewBag.CurrentFilter })
        </th>
        <th>
            Who took
        </th>
        <th>
            Actions
        </th>
        <th></th>
    </tr>

    @foreach (var item in Model)
    {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.Name)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.BookAvailability)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.WhosTakenUser)
            </td>
            <td>
                @Html.ActionLink("Edit", "Edit", new { id = item.Id }) |
                @Html.ActionLink("Details", "Details", new { id = item.Id }) |
                @Html.ActionLink("Delete", "Delete", new { id = item.Id })
            </td>
        </tr>
    }

</table>
<br />
Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) of @Model.PageCount

@Html.PagedListPager(Model, page => Url.Action("Index",
    new { page, sortOrder = ViewBag.CurrentSort, currentFilter = ViewBag.CurrentFilter }))

